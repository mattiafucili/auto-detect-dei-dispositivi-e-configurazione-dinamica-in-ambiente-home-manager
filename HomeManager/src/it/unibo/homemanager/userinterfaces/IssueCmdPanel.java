/*
 * IssueCmdPanel.java
 *
 * Created on 15 ottobre 2006, 11.58
 */

package it.unibo.homemanager.userinterfaces;

import alice.logictuple.*;
import alice.tucson.api.*;
import it.unibo.homemanager.ServiceFactory;
import it.unibo.homemanager.dbmanagement.Database;
import it.unibo.homemanager.detection.Device;
import it.unibo.homemanager.tablemap.*;
import it.unibo.homemanager.tablemap.ServicesInterfaces.DeviceServiceInterface;
import it.unibo.homemanager.tablemap.ServicesInterfaces.RoomServiceInterface;
import it.unibo.homemanager.util.Utilities;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author  admin
 */
public class IssueCmdPanel extends javax.swing.JPanel {
    
    private ServiceFactory sf;
    private RoomServiceInterface rs;
    private DeviceServiceInterface ds;
    private Database database;
    
    private Room r;
    private Device d;
    private Vector rooms,tid;//,devs;
    private ArrayList<Device> devs;
    
    private MainPanel mp;
    
    //private TupleCentreId tid;
    
    private User usr;
    
    /** Creates new form IssueCmdPanel */
    public IssueCmdPanel(MainPanel mp, Vector t, ServiceFactory sf) {
        initComponents();
        this.mp = mp;
        tid = t;
	this.sf = sf;
	try {
	    this.database = sf.getDatabaseInterface();
	} catch (Exception ex) {
	    Logger.getLogger(IssueCmdPanel.class.getName()).log(Level.SEVERE, null, ex);
	}
    }
    
    protected void init(User u) {
        usr = u;
        init();
    }
    
    protected void init() {
        this.btCancelCmd.setEnabled(false); // cannot cancel command
        this.btIssue.setEnabled(false);
        tCmd.setText(""); // empty cmd text-field
        
        // fill combo-box with rooms
        rs = sf.getRoomServiceInterface();
        try {
            rooms = rs.getRooms(database.getDatabase());
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }
        // room selection
        cbRoom.removeAllItems();
        for(int i=0;i<rooms.size();i++) {
            Room room = (Room)rooms.elementAt(i);
            if(room.name.compareTo("hall")!=0)
                cbRoom.addItem(room.name);
        }
        cbRoom.setSelectedItem(null);
        
        this.cbRoom.setEnabled(true);
        d = null;
        devs = null;
        this.cbDevice.setEnabled(false);
        cbDevice.removeAllItems();
        this.cbCmd.setEnabled(false);
        cbCmd.removeAllItems();
        if(!isVisible()) setVisible(true);
    }
    
    protected void hidePanel() {
        if(isVisible()) setVisible(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btIssue = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbDevice = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        btSeeCmd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbRoom = new javax.swing.JComboBox();
        cbCmd = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        btCancelCmd = new javax.swing.JButton();
        tCmd = new javax.swing.JTextField();
        btLogOut = new javax.swing.JButton();
        btMenu = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setMaximumSize(new java.awt.Dimension(538, 343));
        setMinimumSize(new java.awt.Dimension(538, 343));
        setPreferredSize(new java.awt.Dimension(538, 343));

        btIssue.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btIssue.setForeground(new java.awt.Color(102, 0, 102));
        btIssue.setText("ISSUE COMMAND");
        btIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIssueActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Compose your command below:");

        cbDevice.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        cbDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDeviceActionPerformed(evt);
            }
        });
        cbDevice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbDeviceFocusGained(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Room:");

        btSeeCmd.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btSeeCmd.setForeground(new java.awt.Color(102, 0, 102));
        btSeeCmd.setText("SAVE COMMAND");
        btSeeCmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeeCmdActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Command:");

        cbRoom.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        cbRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRoomActionPerformed(evt);
            }
        });

        cbCmd.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        cbCmd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbCmdFocusGained(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Device:");

        btCancelCmd.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btCancelCmd.setForeground(new java.awt.Color(102, 0, 102));
        btCancelCmd.setText("CANCEL COMMAND");
        btCancelCmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelCmdActionPerformed(evt);
            }
        });

        tCmd.setEditable(false);
        tCmd.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        tCmd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));

        btLogOut.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btLogOut.setForeground(new java.awt.Color(102, 0, 102));
        btLogOut.setText("LOG OUT");
        btLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLogOutActionPerformed(evt);
            }
        });

        btMenu.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btMenu.setForeground(new java.awt.Color(102, 0, 102));
        btMenu.setText("MENU");
        btMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMenu(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(180, 180, 180)
                .add(btIssue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, cbRoom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 489, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 69, Short.MAX_VALUE)
                        .add(btMenu)
                        .add(19, 19, 19)
                        .add(btLogOut))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(layout.createSequentialGroup()
                            .add(btSeeCmd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(btCancelCmd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cbCmd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 488, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, tCmd, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cbDevice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 488, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE))
                .add(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(btMenu)
                        .add(btLogOut)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cbRoom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cbDevice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(11, 11, 11)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cbCmd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(9, 9, 9)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btCancelCmd, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(btSeeCmd))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(tCmd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btIssue)
                .add(54, 54, 54))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backToMenu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMenu
        mp.loadInitRolePanel(usr);
    }//GEN-LAST:event_backToMenu

    private void btIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIssueActionPerformed
        sendCmd();
    }//GEN-LAST:event_btIssueActionPerformed

    private void btLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLogOutActionPerformed
        mp.logOut(evt);
    }//GEN-LAST:event_btLogOutActionPerformed

    private void btCancelCmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelCmdActionPerformed
        tCmd.setText("");
        r = null;
        d = null;
        devs = null;
        cbRoom.setEnabled(true);
        cbRoom.setSelectedItem(null);
        cbDevice.setEnabled(false);
        cbDevice.removeAllItems();
        cbDevice.setSelectedItem(null);
        cbCmd.setEnabled(false);
        cbCmd.removeAllItems();
        cbCmd.setSelectedItem(null);
        btCancelCmd.setEnabled(false);
        btIssue.setEnabled(false);
    }//GEN-LAST:event_btCancelCmdActionPerformed

    private void cbCmdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbCmdFocusGained
        cbDevice.setEnabled(false);
        try {
            d = Utilities.findDeviceByName(devs,
                    cbDevice.getSelectedItem().toString());
        } catch(Exception ex) {
            ex.printStackTrace();
        }
        // cmd selection
        String[] cmds = Utilities.getDevCmds(d.getDeviceParameters());
        cbCmd.removeAllItems();
        for(int i=0;i<cmds.length;i++)
            cbCmd.addItem(cmds[i]);
        cbCmd.setSelectedItem(null);
    }//GEN-LAST:event_cbCmdFocusGained

    private void cbRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRoomActionPerformed
        if(cbRoom.getSelectedItem() != null)
            cbDevice.setEnabled(true);
    }//GEN-LAST:event_cbRoomActionPerformed

    private void btSeeCmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeeCmdActionPerformed
        if(cbRoom.getSelectedItem() == null ||
                cbDevice.getSelectedItem() == null ||
                cbCmd.getSelectedItem() == null) {
            javax.swing.JOptionPane.showMessageDialog(null,
                    "Please choose room, device and command.",
                    "MISSING SELECTION",javax.swing.JOptionPane.ERROR_MESSAGE);
            btCancelCmd.setEnabled(false); // cannot cancel
            btIssue.setEnabled(false); // cannot issue command
            cbRoom.setEnabled(true);
            cbDevice.setEnabled(false);
            d = null;
            cbDevice.removeAllItems(); // empty device combo-box
            devs = null;
            cbCmd.setEnabled(false);
            cbCmd.removeAllItems(); // empty cmd combo-box
            return;
        }
        this.tCmd.setText("send_cmd("+r.name+","+d.getDeviceName()+","+
                cbCmd.getSelectedItem().toString()+")");
        this.btCancelCmd.setEnabled(true);
        this.btIssue.setEnabled(true);
    }//GEN-LAST:event_btSeeCmdActionPerformed

    private void cbDeviceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbDeviceFocusGained
        cbRoom.setEnabled(false);
        ds = sf.getDeviceServiceInterface();
        try { // find devices in selected room
            String rm = cbRoom.getSelectedItem().toString();
            r = Utilities.findRoomByName(rooms,rm);
            devs = ds.getDevicesInRoom(database.getDatabase(),r.idRoom);
        } catch(Exception ex) {
            ex.printStackTrace();
        }
        // device selection
        cbDevice.removeAllItems();
        for(int i=0;i<devs.size();i++)
	    cbDevice.addItem(devs.get(i).getDeviceName());
            //cbDevice.addItem(((Device)devs.elementAt(i)).name);
        cbDevice.setSelectedItem(null);
    }//GEN-LAST:event_cbDeviceFocusGained

    private void cbDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDeviceActionPerformed
        if(cbDevice.getSelectedItem() != null)
            cbCmd.setEnabled(true);
    }//GEN-LAST:event_cbDeviceActionPerformed
   
    private void sendCmd() {
        try {
            //TucsonContext ctx = Tucson.enterDefaultContext();
            TucsonAgentId agent = new TucsonAgentId("sendCmdAgent");
            EnhancedSynchACC acc = TucsonMetaACC.getContext(agent);
            
            LogicTuple cmd = new LogicTuple("send_cmd",new Value(usr.idUser),new Value(r.idRoom),
                new Value(d.getDeviceId()),new Value(cbCmd.getSelectedItem().toString()));
            
            acc.out((TucsonTupleCentreId)tid.elementAt(r.idRoom-1), cmd, null);
           // ctx.out((TupleCentreId)tid.elementAt(r.idRoom-1),cmd);
            Utilities.insertTupleInto((TucsonTupleCentreId)tid.elementAt(r.idRoom-1), cmd);
            System.err.println("CMD SENT: "+this.tCmd.getText()+" / "+cmd);
            acc.exit();
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelCmd;
    private javax.swing.JButton btIssue;
    private javax.swing.JButton btLogOut;
    private javax.swing.JButton btMenu;
    private javax.swing.JButton btSeeCmd;
    private javax.swing.JComboBox cbCmd;
    private javax.swing.JComboBox cbDevice;
    private javax.swing.JComboBox cbRoom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField tCmd;
    // End of variables declaration//GEN-END:variables
    
}
